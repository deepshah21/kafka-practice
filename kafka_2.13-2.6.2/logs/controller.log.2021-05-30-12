[2021-06-02 00:02:12,568] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-06-02 00:02:12,590] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-06-02 00:02:12,594] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2021-06-02 00:02:12,594] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-06-02 00:02:12,594] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2021-06-02 00:02:12,594] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-06-02 00:07:13,898] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-06-02 00:07:13,914] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-06-02 00:07:13,915] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2021-06-02 00:07:13,915] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-06-02 00:07:13,916] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2021-06-02 00:07:13,916] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-06-02 00:12:13,916] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-06-02 00:12:14,025] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-06-02 00:12:14,028] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2021-06-02 00:12:14,028] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-06-02 00:12:14,028] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2021-06-02 00:12:14,028] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-06-02 00:17:14,028] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-06-02 00:17:14,051] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-06-02 00:17:14,060] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2021-06-02 00:17:14,060] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-06-02 00:17:14,060] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2021-06-02 00:17:14,061] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-06-02 00:22:14,061] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-06-02 00:22:14,146] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-06-02 00:22:14,148] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2021-06-02 00:22:14,148] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-06-02 00:22:14,149] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2021-06-02 00:22:14,149] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-06-02 00:27:14,149] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-06-02 00:27:14,176] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-06-02 00:27:14,177] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2021-06-02 00:27:14,177] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-06-02 00:27:14,177] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2021-06-02 00:27:14,177] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-06-02 00:32:14,178] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-06-02 00:32:14,191] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-06-02 00:32:14,193] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2021-06-02 00:32:14,193] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-06-02 00:32:14,193] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2021-06-02 00:32:14,193] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-06-02 00:37:14,193] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-06-02 00:37:14,530] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-06-02 00:37:14,533] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2021-06-02 00:37:14,533] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-06-02 00:37:14,533] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2021-06-02 00:37:14,533] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-06-02 00:42:14,534] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-06-02 00:42:14,548] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-06-02 00:42:14,550] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2021-06-02 00:42:14,550] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-06-02 00:42:14,550] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2021-06-02 00:42:14,550] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-06-02 00:42:17,991] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2021-06-02 00:42:17,993] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2021-06-02 00:42:17,994] DEBUG [Controller id=1] Live brokers: 2 (kafka.controller.KafkaController)
[2021-06-02 00:42:18,131] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-9 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-42 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-21 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-17 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-30 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-5 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-1 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-45 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-12 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-41 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-24 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-49 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-0 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-29 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-25 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-37 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-33 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-15 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-48 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-11 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-23 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-19 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-7 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-3 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-36 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-47 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),quickstart-events-0 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-43 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-18 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-31 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-27 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-39 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-6 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-35 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2) (kafka.controller.KafkaController)
[2021-06-02 00:42:19,443] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-06-02 00:42:19,458] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-06-02 00:42:19,458] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-06-02 00:42:19,460] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2021-06-02 00:42:19,460] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1, 2) (kafka.controller.KafkaController)
[2021-06-02 00:42:19,462] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2021-06-02 00:42:19,462] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2021-06-02 00:42:19,462] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2021-06-02 00:42:19,462] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2021-06-02 00:42:19,462] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2021-06-02 00:42:19,464] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2021-06-02 00:42:19,464] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2021-06-02 00:42:19,464] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2021-06-02 00:42:19,468] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
